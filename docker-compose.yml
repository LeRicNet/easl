# For more information: https://laravel.com/docs/sail
version: '3'
services:
    laravel.test:
        build:
            context: ./docker/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.1/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - meilisearch
            - selenium

    mysql:
        image: 'mysql/mysql-server:8.0'
        container_name: 'mysql'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
        networks:
            - sail
            - backend
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'sail-meilisearch:/data.ms'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
            retries: 3
            timeout: 5s

    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail

    selenium:
        image: 'selenium/standalone-chrome'
        volumes:
            - '/dev/shm:/dev/shm'
        networks:
            - sail

    tensorflow.gpu:
#        image: tensorflow/tensorflow:2.9.2-gpu-jupyter
        image: xcxlab/jupyterlab-gpu:1.0.0b
        container_name: 'xcxlab_jupyterlab-GPU'
        ports:
            - 8888:8888
        volumes:
            - ${JUPYTER_CONFIG}:/root/.jupyter/
            - ${JUPYTER_STARTUP}:/root/.ipython/profile_default/startup/
        links:
            - orthanc
            - mysql
        networks:
            - backend
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities: [gpu]

    flask:
        image: easl/flask:latest
        container_name: "flask"
        ports:
            - 5000:5000
        volumes:
            - ${FLASK_BACKEND}:/root/
        links:
            - orthanc
        networks:
            - backend
            - frontend

    rstudio:
        image: 'xcxlab/rstudio' # Dockerfile located in xcxlab/dockerfiles/rstudio
        container_name: 'xcxlab_rstudio'
        ports:
            - 8787:8787
        environment:
            - DISABLE_AUTH=true
        volumes:
            - ${RSTUDIO_SERVER_CONFIG}:/etc/rstudio/
            - ${RSTUDIO_SHINY_APP_DIRECTORY}:/srv/shiny-server/
            - ${RSTUDIO_LIBRARY_PATH}:/usr/local/lib/R/site-library/
            - ${RSTUDIO_HOME}:/home/rstudio/interfaces/

    shiny.server:
        image: 'xcxlab/shiny' # Dockerfile located in xcxlab/dockerfiles/shiny
        container_name: 'xcxlab_shiny'
        environment:
            - DISABLE_AUTH=true
        ports:
            - 3838:3838
        volumes:
            - ${RSTUDIO_SHINY_APP_DIRECTORY}:/srv/shiny-server/
            - ${RSTUDIO_LIBRARY_PATH}:/usr/local/lib/R/site-library/

    nginx:
        image: nginx:1.7.7
        container_name: nginx
        restart: always
        networks:
            - frontend
        ports:
            - 8080:80
            - 8443:443
        volumes:
            - sampledata:/sampledata
            - ${NGINX_DEFAULT_CONF:-./nginx/default.conf}:/etc/nginx/conf.d/default.conf
            - ${NGINX_SSL_CERT:-./ssl/ssl_dev.crt}:/etc/ssl/SSL.crt:ro  # SSL development certificate
            - ${NGINX_SSL_KEY:-./ssl/ssl_dev.key}:/etc/ssl/SSL.key:ro   # SSL development key
#            - matomo:/var/www/html:ro
#            - ./matomo.conf:/etc/nginx/conf.d/default.conf:ro

    viewer:
        image: webapp:latest
#        image: ohif:1.0.1
        container_name: webapp
        depends_on:
            - orthanc
        volumes:
            # Nginx config
            - ./vendor/easlview/platform/app/.recipes/OpenResty-Orthanc/config/nginx2.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
            # App Config
            - ./vendor/easlview/platform/app/.recipes/OpenResty-Orthanc/config/app-config.js:/var/www/html/app-config.js
            # Custom HTML
            - ./vendor/easlview/platform/app/.recipes/OpenResty-Orthanc/index.html:/var/www/html/index.html
            # Logs
            - ./vendor/easlview/platform/app/.recipes/OpenResty-Orthanc/logs/nginx:/var/logs/nginx
            # Let's Encrypt
            # - letsencrypt_certificates:/etc/letsencrypt
            # - letsencrypt_challenges:/var/www/letsencrypt
        ports:
            - 443:443 # SSL
            - 808:80 # Web
        depends_on:
            - orthanc
        restart: on-failure

    mongo:
        image: mongo:4.0.14
        container_name: mongo
        networks:
            - backend
        #    ports:
        #      - ${MONGO_PORT:-27017}:27017
        volumes:
            - ${MONGO_DATA:-./mongo_data}:/data/db


    orthanc:
        image: jodogne/orthanc-plugins
        hostname: orthanc
        container_name: orthanc
        volumes:
            # Config
            - ./vendor/easlview/platform/app/.recipes/OpenResty-Orthanc/config/orthanc.json:/etc/orthanc/orthanc.json:ro
            # Persist data
            - ./vendor/easlview/platform/app/.recipes/OpenResty-Orthanc/volumes/orthanc-db/:/var/lib/orthanc/db/
        restart: unless-stopped

    postgres:
        image: postgres:12.1
        container_name: postgres
        networks:
            - backend
        ports:
          - ${POSTGRES_PORT:-5432}:5432
        volumes:
            - ${POSTGRES_DATA_MNT:-/pg_data/data}:${PGDATA:-/var/lib/postgresql/data}
        environment:
            - POSTGRES_USER=${POSTGRES_USER:-postgres}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pgpassword}
            - PGDATA=${PGDATA:-/var/lib/postgresql/data}
            - POSTGRES_DB=orthanc


#    matomo-db:
#        image: mariadb:10.11
#        container_name: matomo-db
#        command: --max-allowed-packet=64MB
#        restart: always
#        volumes:
#            - matomodb:/var/lib/mysql:Z
#        environment:
#            - MYSQL_ROOT_PASSWORD='${DB_PASSWORD}'
#            - MYSQL_ROOT_HOST="%"
#            - MYSQL_DATABASE='matomo'
#            - MYSQL_USER='${DB_USERNAME}'
#            - MYSQL_PASSWORD='${DB_PASSWORD}'
#            - MARIADB_AUTO_UPGRADE=1
#            - MARIADB_DISABLE_UPGRADE_BACKUP=1
#        env_file:
#            - .env
#
#    matomo:
#        image: matomo:fpm-alpine
#        container_name: matomo
#        restart: always
#        links:
#            - mysql
#        volumes:
#            # - ./config:/var/www/html/config:z
#            # - ./logs:/var/www/html/logs:z
#            - matomo:/var/www/html:z
#        environment:
#            - MATOMO_DATABASE_HOST=mysql
#            - PHP_MEMORY_LIMIT=2048M
#        env_file:
#            - .env
#
#    nginx-matomo:
#        image: nginx:alpine
#        container_name: nginx-matomo
#        restart: always
#        volumes:
#            - matomo:/var/www/html:z,ro
#            # see https://github.com/matomo-org/matomo-nginx
#            - ./matomo.conf:/etc/nginx/conf.d/default.conf:z,ro
#        ports:
#            - 8081:80

#    nginx-matomo:
#        image: nginx:alpine
#        container_name: nginx-matomo
#        restart: always
#        volumes:
#            - matomo:/var/www/html:z
#            # see https://github.com/matomo-org/matomo-nginx
#            - ./matomo.conf:/etc/nginx/conf.d/default.conf:z,ro
#        ports:
#            - 8081:80
#
#    matomo:
#        image: matomo:fpm-alpine
#        container_name: 'matomo'
#        restart: always
#        links:
#            -   mysql
#        volumes:
##            - matomo/config:/var/www/html/config:z
##            - matomo/logs:/var/www/html/logs:z
#            - matomo:/var/www/html:z
#        environment:
#            - MATOMO_DATABASE_HOST=mysql
#            - PHP_MEMORY_LIMIT=2048M
#        env_file:
#            -   .env
#        networks:
#            - backend

#    db:
#        image: mariadb:10.11
#        container_name: 'db'
#        command: --max-allowed-packet=64MB
#        restart: always
#        volumes:
#            - db:/var/lib/mysql:Z
#        environment:
#            - MYSQL_ROOT_PASSWORD=
#            - MARIADB_AUTO_UPGRADE=1
#            - MARIADB_DISABLE_UPGRADE_BACKUP=1
#            - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=1
#        env_file:
#            - ./db.env
#        networks:
#            - frontend

    matomo:
        image: matomo:fpm-alpine
        container_name: 'matomo'
        restart: always
        links:
            - mysql
        volumes:
            # - ./config:/var/www/html/config:z
            # - ./logs:/var/www/html/logs:z
            - matomo:/var/www/html:z
        environment:
            - MATOMO_DATABASE_HOST=mysql
            - PHP_MEMORY_LIMIT=2048M
        env_file:
            - ./db.env
        networks:
            - frontend

    nginx-matomo:
        image: nginx:alpine
        container_name: 'nginx-matomo'
        restart: always
        volumes:
            - matomo:/var/www/html:z,ro
            # see https://github.com/matomo-org/matomo-nginx
            - ./matomo.conf:/etc/nginx/conf.d/default.conf:z,ro
        ports:
            - 8081:80
        networks:
            - frontend


networks:
    sail:
        driver: bridge
    frontend:
    backend:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
    sampledata:
    mysql:
    matomo:
    db:

